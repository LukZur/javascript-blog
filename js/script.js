/* eslint-disable no-undef */
function clearTitleLinks(list) {
  list.innerHTML = '';
}

function generateTitleLinks() {
  /* [DONE]  remove contents of titleList */

  clearTitleLinks(titleList);

  const articleList = document.querySelectorAll('.post');
  let html = '';
  /* [DONE] for each article: */
  // eslint-disable-next-line no-undef
  for (article of articleList) {
    //   console.log(article);
    /* [DONE]  get the article id*/
    const articleID = article.getAttribute('id');
    //   console.log(articleID);
    /* [DONE] find the title element
       [DONE] get the title from the title element*/
    const articleTitle = article.querySelector('.post-title').innerHTML;
    //   console.log(articleTitle);
    /* [DONE] insert link into titleList*/
    const linkCode =
      '<li><a href="#' +
      articleID +
      '"><span>' +
      articleTitle +
      '</span></a></li>';
    //   console.log(linkCode);

    html = html + linkCode;
    //   console.log(html);
  }
  titleList.innerHTML = html;

  /* [DONE]  Funcionality to find titles and add click event handler is moved at the end of the generateTitleLinks function to do 
  this after the actual links were generated by the function*/
  const links = document.querySelectorAll('.titles a');

  for (let link of links) {
    link.addEventListener('click', titleClickHandler);
  }
}

function bubbleSort() {
  /* Getting numbers from sort from user and displaying them*/
  let numbersEntered = 'You entered such numbers: ';
  let sortedNumbers = '';
  let pivotNumber = 0;
  // console.log("length = " + sortedNumbers.length);
  // console.log("length = " + numbersEntered.length);
  // console.log(numbersEntered);
  for (i of sortArray) {
    //   console.log("Number from array: " + i);
    if (numbersEntered.length == 26) {
      numbersEntered = numbersEntered + i;
    } else {
      numbersEntered = numbersEntered + ', ' + i;
    }
  }
  console.log(numbersEntered);

  for (let x = 0; x < sortArray.length; x++) {
    for (let z = 0; z < sortArray.length; z++) {
      //   console.log("Number from numArray: " + sortArray[z]);

      if (sortOrder == 'A') {
        if (parseFloat(sortArray[z]) > parseFloat(sortArray[z + 1])) {
          pivotNumber = sortArray[z + 1];
          sortArray[z + 1] = sortArray[z];
          sortArray[z] = pivotNumber;
        }
      } else if (sortOrder == 'D') {
        if (parseFloat(sortArray[z]) < parseFloat(sortArray[z + 1])) {
          pivotNumber = sortArray[z + 1];
          sortArray[z + 1] = sortArray[z];
          sortArray[z] = pivotNumber;
        }
      }
      //   console.log("Sorted numbers: " + sortedNumbers);
    }
  }

  for (let z = 0; z < sortArray.length; z++) {
    if (sortedNumbers.length == 0) {
      sortedNumbers = sortedNumbers + sortArray[z];
    } else {
      sortedNumbers = sortedNumbers + ', ' + sortArray[z];
    }
  }

  /* Sorting the numbers and displaying them sorted in the way the user asked*/
  if (sortOrder != 'A' && sortOrder != 'D') {
    console.log('You entered invalid Sort order!!!');
  } else {
    console.log(
      'Here are the number sorted in the chosen manner(' +
      sortOrder +
      '):' +
      '\n' +
      sortedNumbers
    );
  }
}

('use strict');

const titleClickHandler = function (event) {
  event.preventDefault();
  const clickedElement = this;
  console.log('Link was clicked!');
  console.log(event);

  /* [DONE]  remove class 'active' from all article links  */

  const activeLinks = document.querySelectorAll('.titles a.active');
  // console.log("activelinks = " + activeLinks);
  for (let activeLink of activeLinks) {
    activeLink.classList.remove('active');
  }

  /* [DONE]   add class 'active' to the clicked link */

  console.log('clickedElement:', clickedElement);

  clickedElement.classList.add('active');

  /* [DONE]  remove class 'active' from all articles */

  const activeArticles = document.querySelectorAll('.posts article.active');

  for (let activeArticle of activeArticles) {
    activeArticle.classList.remove('active');
  }

  /* [DONE]   get 'href' attribute from the clicked link */

  const hrefAttr = clickedElement.getAttribute('href');

  console.log('hrefAttr:', hrefAttr);

  /* [DONE]   find the correct article using the selector (value of 'href' attribute) */

  const getArticle = document.querySelector(hrefAttr);

  console.log('getArticle:', getArticle);

  /* [DONE]   add class 'active' to the correct article */

  getArticle.classList.add('active');
};

const titleList = document.querySelector('.titles');

generateTitleLinks();

////////////////////////////////////////////////////BUBBLE SORT

/* Getting numbers from sort from user and displaying them*/
let sortArray = prompt(
  'Please enter comma separated numbers to sort: '
).split(',');
/*asking the user how they want to have the numbers sorted*/
const sortOrder = prompt(
  'Please enter how you would like to have your numbers sorted (A - for Ascending; D - for Descending): '
);

//   const elementForSort = document.querySelector(".sidebar").innerHTML;
//   console.log(elementForSort);

//   const resultSort = bubbleSort(sortArray);
bubbleSort();
